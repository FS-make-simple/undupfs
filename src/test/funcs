#
# Overall usage
#   begin
#       # from t.foo
#       starttests t.foo
#       test "description in words"
#          testcmd || fail
#       test "another description"
#          testcmd || fail
#       endtests t.foo
#     if t.foo passed: win t.foo <number of passes>
#     else t.foo failed: lose t.foo <number of fails>
#       # from t.bar
#       starttests t.bar
#       test "yet another description"
#       endtests t.bar
#     if t.bar passed: win t.bar <number of passes>
#     else t.bar failed: lose t.bar <number of fails>
#   finish
#
# Note that test() is stateful, it tracks what test is in progress and
# manages stdout/stderr.  Each t.foo is run in a separate shell, with
# several useful environment variables set and many functions accessible.

# called from runtest.sh before running any tests
# usage: begin
begin() {
    test_nsuccess=0
    test_nfail=0

    echo
    echo "   Running tests in $target from $testdir at `date`"
    echo
}

# called from runtest.sh when done running tests
# usage: at end of t.foo, call "finish"
finish() {
    echo
    echo "   pass: $test_nsuccess fail: $test_nfail"
    echo
    if [[ $test_nfail -gt 0 ]]; then
        exit 1
    else
        exit 0
    fi
}

# called from runtest.sh when completing a t.* script successfully
win() {
    echo
    r=$(cat $result)
    [ -z "$r" ] && r=1
    test_nsuccess=$((test_nsuccess + 1))
}

# called from runtest.sh when completing a t.* script with failures
lose() {
    echo "failed $1"
    test_nfail=$((test_nfail + 1))
}

# called from t.foo once at startup
# Usage: starttests t.foo
starttests() {
    test_script=$1
    test_pass=0
    test_fail=0
}

# internal helper for test() and endtests()
_handleprevtest() {
    # handle previous test, if any
    if [ ! -z "$test_cur" ]; then
        case "$test_status" in
        fail)
            echo "FAIL"
            $((test_fail++)) ;;
        *)
            echo "ok"
            $((test_pass++)) ;;
        esac
    fi
}
# called from t.foo when starting a sub-test
# Usage:
#       test "Description of test"
# or as the last statement of a t.foo script,
#       test ''
test() {
    _handleprevtest
    printf "%-60s_" "${1// /_}_" | sed 's/ /./g; s/_/ /g'
    test_cur="$1"
    test_status=unknown
}

fail() {
    test_status=fail
}

# called from t.foo once at shutdown
# Usage: endtests t.foo
endtests() {
    _handleprevtest
    printf '%d\n' $test_pass >&99
    exit $test_fail
}
